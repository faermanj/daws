
Description: Auto Scaling Group of EC2 instances behind an ALB

Parameters:
  EnvId:
    Type: String
    Default: project

  GitHubUser:
    Description: GitHub username owning the repo
    Type: String
    Default: "faermanj"

  GitHubRepo:
    Description: GitHub repository name
    Type: String
    Default: "daws"

Resources:

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64}}"
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -e
            yum install -y python3 iptables
            TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" \
              -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
            INSTANCE_ID=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" \
              http://169.254.169.254/latest/meta-data/instance-id)
            cat <<EOF > /home/ec2-user/index.html
            <html>
            <head><title>EC2 Instance $INSTANCE_ID</title></head>
            <body>
            <h1>Hello from EC2!</h1>
            <p>Instance ID: <b>$INSTANCE_ID</b></p>
            </body>
            </html>
            EOF
            cd /home/ec2-user
            nohup python3 -m http.server 8080 --directory /home/ec2-user &
            iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub '${EnvId}-SimpleSubnetA'
        - Fn::ImportValue: !Sub '${EnvId}-SimpleSubnetB'
        - Fn::ImportValue: !Sub '${EnvId}-SimpleSubnetC'
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '2'
      MaxSize: '4'
      DesiredCapacity: '2'
      TargetGroupARNs:
        - !Ref AlbTargetGroup

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP on 8080 from SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub '${EnvId}-AlbSecurityGroupId'

  AlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub '${EnvId}-SimpleVpcId'
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: /
      Matcher:
        HttpCode: '200'
Outputs:
  AutoScalingGroupName:
    Description: Name of the Auto Scaling Group
    Value: !Ref AutoScalingGroup
    Export:
      Name: !Sub '${EnvId}-AutoScalingGroupName'
