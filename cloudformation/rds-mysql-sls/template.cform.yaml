# aws cloudformation deploy --stack-name vpc-3ha --template-file cloudformation/vpc-3ha/template.cform.yaml
# aws cloudformation deploy --stack-name rds-mysql-sls --template-file cloudformation/rds-mysql-sls/template.cform.yaml --parameter-overrides DBPassword=Masterkey123

Description: Aurora Serverless MySQL

Parameters:
  EnvId:
    Type: String
    Default: project
    Description: Tag value for Application

  DBUsername:
    Type: String
    Default: admin
    MinLength: 1
    MaxLength: 32
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
    Description: Administrative username

  DBPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 128
    Description: Administrative password

  AllowedCidr:
    Type: String
    Default: "0.0.0.0/0"
    Description: CIDRs allowed in to database clients

  DatabaseName:
    Type: String
    Default: project
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9_]*$"

Resources:
  DBClientsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Aurora Clients
      VpcId:
        Fn::ImportValue: !Sub "${EnvId}-VpcId"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref AllowedCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: EnvId
          Value: !Ref EnvId

  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Aurora MySQL SG
      VpcId:
        Fn::ImportValue: !Sub "${EnvId}-VpcId"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref DBClientsSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: EnvId
          Value: !Ref EnvId

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for Aurora MySQL
      SubnetIds:
        - Fn::ImportValue: !Sub "${EnvId}-IsolatedSubnet1Id"
        - Fn::ImportValue: !Sub "${EnvId}-IsolatedSubnet2Id"
        - Fn::ImportValue: !Sub "${EnvId}-IsolatedSubnet3Id"
      Tags:
        - Key: EnvId
          Value: !Ref EnvId

  DbCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DbSubnetGroup
      VpcSecurityGroupIds: [!Ref DbSecurityGroup]
      DatabaseName: !Ref DatabaseName
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0
        MaxCapacity: 8
      Tags:
        - Key: EnvId
          Value: !Ref EnvId

  DbInstanceWriter:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DbCluster
      DBInstanceClass: db.serverless
      Engine: aurora-mysql
      PubliclyAccessible: false
      Tags:
        - Key: EnvId
          Value: !Ref EnvId

Outputs:
  ClusterArn:
    Description: Cluster ARN
    Value: !Ref DbCluster

  WriterEndpoint:
    Description: Writer endpoint address
    Value: !GetAtt [DbCluster, Endpoint.Address]

  ReaderEndpoint:
    Description: Reader endpoint address
    Value: !GetAtt [DbCluster, ReadEndpoint.Address]

  SecurityGroupId:
    Description: DB security group ID
    Value: !Ref DbSecurityGroup

  DBInstanceId:
    Description: Writer DB instance identifier
    Value: !Ref DbInstanceWriter

  DBConnectCLI:
    Description: Command to connect to the DB with host and user
    Value: !Sub "mysql -h '${DbInstanceWriter.Endpoint.Address}' -u '${DBUsername}' -p"

  DBHost:
    Description: Writer DB instance host
    Value: !GetAtt [DbInstanceWriter, Endpoint.Address]
    Export:
      Name: !Sub "${EnvId}-DBHost"

  DBUsername:
    Description: DB username
    Value: !Ref DBUsername
    Export:
      Name: !Sub "${EnvId}-DBUsername"

  DBPassword:
    Description: DB password
    Value: !Ref DBPassword
    Export:
      Name: !Sub "${EnvId}-DBPassword"

  DBName:
    Description: Database name
    Value: !Ref DatabaseName
    Export:
      Name: !Sub "${EnvId}-DBName"
      
  DBClientsSecurityGroupId:
    Description: Security Group for DB clients
    Value: !Ref DBClientsSecurityGroup
    Export:
      Name: !Sub "${EnvId}-DBClientsSecurityGroupId"

