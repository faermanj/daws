AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Deployment pipeline for CloudFront distribution

Parameters:
  EnvId:
    Type: String
    Default: project
    Description: Environment identifier used for cross-stack imports.
  Color:
    Type: String
    Default: blue
    Description: Color identifier used to suffix cross-stack imports and exports.
  GitHubRepo:
    Type: String
    Description: GitHub repository name (owner/repo)
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch to track

Resources:
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub "${ArtifactsBucket}/*"
                  - !Sub 
                    - "arn:aws:s3:::${BucketName}/*"
                    - BucketName:
                        Fn::ImportValue: !Sub "${EnvId}-ResourcesBucketName"
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource:
                  Fn::Sub:
                    - "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DistributionId}"
                    - DistributionId:
                        Fn::ImportValue: !Sub "${EnvId}-${Color}-DistributionId"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub "${ArtifactsBucket}"
                  - !Sub "${ArtifactsBucket}/*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !GetAtt BuildProject.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnection

  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub "${EnvId}-github-connection"
      ProviderType: GitHub

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${EnvId}-${Color}-distribution-build"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value:
              Fn::ImportValue: !Sub "${EnvId}-ResourcesBucketName"
          - Name: DISTRIBUTION_ID
            Value:
              Fn::ImportValue: !Sub "${EnvId}-${Color}-DistributionId"
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 14
            build:
              commands:
                - echo "Syncing files to S3..."
                - aws s3 sync ./src/ s3://$BUCKET_NAME/ --delete
                - echo "Creating CloudFront invalidation..."
                - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${EnvId}-${Color}-distribution-pipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: !Ref GitHubRepo
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceOutput

Outputs:
  PipelineName:
    Description: Name of the CodePipeline
    Value: !Ref Pipeline
    Export:
      Name: !Sub "${EnvId}-${Color}-PipelineName"
  
  GitHubConnectionArn:
    Description: GitHub connection ARN for manual activation
    Value: !Ref GitHubConnection
    Export:
      Name: !Sub "${EnvId}-${Color}-GitHubConnectionArn"
